whitesourceUserTokenCredentialsId=whitesourceUserTokenCredentialsId
fortifyCredentialsId=fortifyCredentialsId
DEV_DEPLOY_HOST=int.sap.hana.ondemand.com
CI_DEPLOY_DEV_ACCOUNT=w6cd17e00
CI_DEPLOY_DEV_JAVA_APPLICATION=cmoplatformrefactor
QA_DEPLOY_HOST=eu1.hana.ondemand.com
CI_DEPLOY_QA_ACCOUNT=a629a2553
CI_DEPLOY_QA_JAVA_APPLICATION=cmoapplayerrefactor
CI_DEPLOY_HTML5_APPLICATION=piperhtml5test
NEO_HOME=/neo-1.35.8
WAR_HOME=java/service_layer/target
HTML5_HOME=ui5/generic_messaging/target

neoAccountDev=waed63dcb
neoLandscapeDev=int.sap.hana.ondemand.com
neoAccountQA=a629a2553
neoLandscapeQA=eu1.hana.ondemand.com

#archivePath: WAR_LOCATION

#JAVA_HOME=/docker-java-home
#MTA_JAR_LOCATION=~/userContent/mta.jar

#neoApplicationName=piperhtml5test
#

#warAction=deploy
#deployAccount=c5249189trial
#deployHost=hanatrial.ondemand.com
#neoHome=/neo-sdk
#archivePath=java/service_layer/target
#applicationName=piperjavatest
#runtime=neo-java-web
#runtime-version=3.48

# Deploy host of SAP Cloud Platform
#
# SAP CP Trial landscape:
#

# Account in the SAP CP landscape to deploy


# Credentials ID in Jenkins for deployment to SAP CP
neoCredentialsId=CI_CREDENTIALS_ID

# Health Check
healthCheckUrlDev=https://cmoplatformrefactorw6cd17e00.int.sap.hana.ondemand.com/PortalOData.svc/
healthCheckUrlQA=https://cmoapplayerrefactora629a2553.hana.ondemand.com/PortalOData.svc/

# ---------------------------------------------------------------------------
# define id of cloud foundry credentials (CF_USERNAME & CF_PASSWORD)
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
cfCredentialsId=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define GitHub credentials
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
#ssh credentials for write access to git (e.g. for versioning)
gitSSHCredentials=GitHub_SSH
#"Personal access token" for access to GitHub REST API
#has to be stored in password part of the credentials
githubCredentials=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define Git information - overwrite Jenkins default
# ---------------------------------------------------------------------------
gitUserName=
gitUserEMail=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define Cloud Access Manager (CAM) credentials
# Note: For productive deployment without CAM Credentials
#       use value of cfCredentialsId also for camCredentialsId
#       and leave camSystemRole empty
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
camCredentialsId=
# System role for your solution as maintained in SPC
camSystemRole=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define PPMS I7P credentials
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
ppmsCredentials=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define xMake build quality "Milestone" or "Release"
# ---------------------------------------------------------------------------
xMakeBuildQuality=Release 
#git url of non-Abap Assemblys release fork
xMakeNaasReleaseForkRepo=
xMakeShipmentType=indirectshipment
xMakeNovaCredentialsId=xmakeNova
xMakeDevCredentialsId=xmakeDev
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define SourceClear credentials
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
sourceClearCredentialsId=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZWFtSWQiOiI4ODQ5Iiwic2NvcGUiOltdLCJpZCI6MTkwMTUsImV4cCI6MTUyNzE3NTkzMCwiYXV0aG9yaXRpZXMiOiJBR0VOVCIsIm9yZ0lkIjoiMTIwIiwianRpIjoiYTY5N2ZlOTQtNzdkMS00NDg5LTk2MzUtZmIwNmIzYjliODZjIiwiY2xpZW50X2lkIjoiIn0.eskrfZ3deJTa1_67pYNx6JgNVbQ_Db6lwJ3rgJFwVPlB68UMHVmZVUNEZ8xE393FvGwZQz0EcDeCxHuVmRuqEcKuGIR3YWVbptE95gDv-KqaYsWotc7ZNNgM-o6IQOmRQbNTt-JzWIVRn3Hz5BoVruwU41ta8atDTfgSZqXOlu0

# ---------------------------------------------------------------------------
# define cloud foundry environment (org, space) including application manifests
# ---------------------------------------------------------------------------
cfApiEndpoint=https://api.cf.sap.hana.ondemand.com
cfOrg=
cfTestSpace=
cfTestManifest=

cfPerfSpace=
cfPerfManifest=

cfProdApiEndpoint=https://api.cf.sap.hana.ondemand.com
cfProdOrg=
cfProdSpace=
cfProdManifest=
# Technical user to be used for app deployment in prod space 
cfProdUser=

# Deprecated! can be used instead of Org & Space -> see Cloud Curriculum
#cfProdEnvConfig=path to environment.yaml
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Extension points - name & location of groovy files
# ---------------------------------------------------------------------------
# custom integration tests
extensionIntegrationTestScript=

# ---------------------------------------------------------------------------
# define cloud foundry application name
# ---------------------------------------------------------------------------
cfAppName=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define email notification distribution list
# ---------------------------------------------------------------------------
notificationRecipients=noel.lowry@sap.com
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define Checkmarx project name & groupId
# ---------------------------------------------------------------------------
checkmarxCredentialsId=be131a83-2640-4498-b544-1b8949e7df18
checkmarxProject=ICH4LS Portal
checkmarxGroupId=f8bb43bd-9a38-4e6a-a932-6a8159817e41
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Control execution of OPA tests
# ---------------------------------------------------------------------------
runOpaTests=false
opaTimeout=5
modulesToCheckWithOpa=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Operations-related information
# ---------------------------------------------------------------------------
# Spring Boot by default provides the endpoint /health for health checks
healthCheckUrlAcceptance=https://cmoplatformrefactorw6cd17e00.int.sap.hana.ondemand.com/
healthCheckUrlPerformance=
healthCheckUrlProduction=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Control execution of acceptance tests
# ---------------------------------------------------------------------------
runFunctionalAcceptanceTests=false
accTestUrl=
# git url to repository with acceptance tests. Leave empty if tests are in current repo
accTestRepository=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Control execution of performance tests
# ---------------------------------------------------------------------------
runPerformanceUnitTests=false
runPerformanceJMeterTests=false
perfJMeterTestRepository=
perfJMeterTestUrl=
runPerformanceSUT=false
perfSUTRepository=
perfSUTestUrl=
#SUT output csv file, e.g.: testAngularCC.csv
perfSUTResultCSV=
#id of the SUT test case: e.g. WDTest#testAngularCC
perfSUTTestCase=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define InfluxDB host
# ---------------------------------------------------------------------------
# host where InfluxDB is installed
# rest of the configuration done in Jenkins system configuration
# use empty string if no InfluxDB is used
influxDBServer=jenkins
# ---------------------------------------------------------------------------
