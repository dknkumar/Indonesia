<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sap.ich4ls</groupId>
	<artifactId>portal.root</artifactId>
	<version>1911.0.1-SNAPSHOT</version>
	<!-- act as parent only -->
	<packaging>pom</packaging>
	<organization>
		<name>SAP Information Collaboration Hub for Life Science</name>
		<url>https://go.sap.corp/ICH4LifeScience</url>
	</organization>
	<!-- general used properties -->
	<properties>
		<release.version>1911</release.version>
		<encoding>UTF-8</encoding>
		<project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
		<debug>true</debug>
		<java.version>1.8</java.version>
		<groovy.version>2.9.2-01</groovy.version>
		<maven.surefire.version>2.20.1</maven.surefire.version>
		<slf4j.version>1.7.25</slf4j.version>
		<slf4j.library>slf4j-simple</slf4j.library>
		<com.sap.it.version>1.40.0</com.sap.it.version>
		<com.sap.it.public.version>2.9.0</com.sap.it.public.version>
		<maven-plugin-version>3.6.0</maven-plugin-version>
		<javax.version>2.5</javax.version>
		<odata.version>4.0.0</odata.version>
		<slf4j.version>1.7.7</slf4j.version>
		<sap.cloud.sdk.version>3.48.12.1</sap.cloud.sdk.version>
		<cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.3</jacoco-maven-plugin.version>
	</properties>
	<!-- module list -->
	<modules>
<!--		<module>java</module>-->
<!--		<module>ui5</module>-->
		<module>selenium</module>
		<!-- <module>testsanddatasql</module> -->
<!--		<module>utils</module>-->
	</modules>
	<!-- pluginManagement -->
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.7.0</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${encoding}</encoding>
						<optimize>true</optimize>
						<debug>${debug}</debug>
						<compilerArgument>-Xlint:all</compilerArgument>
						<showWarnings>true</showWarnings>
						<showDeprecation>true</showDeprecation>
						<fork>true</fork>
						<meminitial>128m</meminitial>
						<maxmem>1024m</maxmem>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.0.0-M2</version>
					<executions>
						<execution>
							<id>enforce-maven</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>3.0.5</version>
									</requireMavenVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
					<configuration>
						<encoding>${encoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.0.0</version>
					<configuration>
						<filesets>
							<fileset>
								<directory>${project.basedir}</directory>
								<includes>
									<include>**/*.tmp</include>
									<include>**/*.log</include>
									<include>**/*~</include>
									<include>**/#Untitled*#</include>
									<include>**/dependency-reduced-pom.xml</include>
									<include>**/pom.xml.versionsBackup</include>
								</includes>
								<followSymlinks>false</followSymlinks>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven.surefire.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.6</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>3.1.0</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
							<configuration>
								<transformers>
									<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
<!--										<mainClass>${mainClass}</mainClass>-->
									</transformer>
								</transformers>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.6.0</version>
					<executions>
						<execution>
							<goals>
								<goal>java</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
<!--						<mainClass>${mainClass}</mainClass>-->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>3.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.1</version>
				</plugin>
				<plugin>
					<groupId>org.whitesource</groupId>
					<artifactId>whitesource-maven-plugin</artifactId>
					<version>18.11.1</version>
					<configuration>
						<orgToken>6971b2eec2d3420bad0caf173ec629f6a3c7d3ba63f3445ab99ffdbf1acfb1d0</orgToken>
						<product>SHC - SAP Information Collaboration Hub for Life Science</product>
						<productVersion>${release.version}</productVersion>
						<checkPolicies>false</checkPolicies>
						<failOnError>false</failOnError>
						<ignorePomModules>false</ignorePomModules>
						<autoDetectProxySettings>true</autoDetectProxySettings>
						<forceCheckAllDependencies>true</forceCheckAllDependencies>
						<userKey>6369963024454105a13dab258ba9d8145c3e6005e33d4e768747acdb83ffab07</userKey>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.3</version>
					<configuration>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
            <groupId>com.sap.eslint</groupId>
            <artifactId>eslint-maven-plugin</artifactId>
            <version>0.1.8</version>
            <executions>
                <execution>
                    <phase>verify</phase>
                    <goals>
                        <goal>eslint</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <version>0.21.1</version>
                <skip>false</skip>
                <failOnError>true</failOnError>
                <onlyChangedFiles>false</onlyChangedFiles>
                <quiet>true</quiet>
                <includes>
                     <include>**/*.js</include>
                </includes>
                <formatters>
                    <formatter implementation="com.sap.eslint.java.formatters.JSLintSonarFormatter">
                        <outputFile>${project.build.directory}/eslint/eslint.xml</outputFile>
                    </formatter>
                </formatters>
            </configuration>
        </plugin>
			</plugins>
		</pluginManagement>
	</build>
	<!-- dependencyManagement -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.sap.gw.rt</groupId>
				<artifactId>camel.components.custom-development</artifactId>
				<version>1.37.1</version>
			</dependency>
			<dependency>
				<groupId>com.sap.it.commons</groupId>
				<artifactId>com.sap.it.commons</artifactId>
				<version>${com.sap.it.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sap.it.commons</groupId>
				<artifactId>com.sap.it.commons.logging.slf4j</artifactId>
				<version>${com.sap.it.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sap.it.public</groupId>
				<artifactId>api</artifactId>
				<version>${com.sap.it.public.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sap.it.public</groupId>
				<artifactId>spi</artifactId>
				<version>${com.sap.it.public.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core</artifactId>
				<version>2.20.0</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>3.5</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.7</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>2.8.5</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-nop</artifactId>
				<version>${slf4j.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>5.2.3</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>5.2.3</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.plugin-tools</groupId>
				<artifactId>maven-plugin-annotations</artifactId>
				<scope>provided</scope>
				<version>3.5</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-core</artifactId>
				<scope>provided</scope>
				<version>${maven-plugin-version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-plugin-api</artifactId>
				<version>${maven-plugin-version}</version>
			</dependency>
			<dependency>
				<groupId>org.sonatype.plexus</groupId>
				<artifactId>plexus-build-api</artifactId>
				<version>0.0.7</version>
			</dependency>
			<dependency>
				<groupId>net.sf.saxon</groupId>
				<artifactId>Saxon-HE</artifactId>
				<version>9.8.0-4</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.10.19</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>4.0.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>odata-server-core</artifactId>
				<version>4.6.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>odata-commons-api</artifactId>
				<version>4.4.0-sap-02</version>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>odata-commons-core</artifactId>
				<version>4.4.0-sap-02</version>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>olingo-odata2-api</artifactId>
				<version>3.0.0-sap-02</version>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>olingo-odata2-core</artifactId>
				<version>3.0.0-sap-02</version>
			</dependency>
			<dependency>
				<groupId>com.sap.cloud</groupId>
				<artifactId>neo-java-web-api</artifactId>
				<version>${sap.cloud.sdk.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-dbcp2</artifactId>
				<version>2.2.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxrs</artifactId>
				<version>3.3.3</version>
			</dependency>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>com.springsource.org.junit</artifactId>
				<version>4.11.0</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-mock</artifactId>
				<version>2.0.8</version>
			</dependency>
			<dependency>
				<groupId>com.github.paweladamski</groupId>
				<artifactId>HttpClientMock</artifactId>
				<version>1.0.4</version>
			</dependency>
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>20171018</version>
			</dependency>
			<dependency>
				<groupId>com.sap.core.connectivity.httpdestination</groupId>
				<artifactId>com.sap.core.connectivity.api</artifactId>
				<version>0.9.256</version>
			</dependency>
			<dependency>
				<groupId>com.sap.core.connectivity.httpdestination</groupId>
				<artifactId>com.sap.core.connectivity.cloud.destinations</artifactId>
				<version>0.9.256</version>
			</dependency>
			<dependency>
				<groupId>com.sap.core.connectivity.httpdestination</groupId>
				<artifactId>com.sap.core.connectivity.cloud.destinations.tunnel</artifactId>
				<version>0.9.256</version>
			</dependency>
			<dependency>
				<groupId>com.sap.core.connectivity.httpdestination</groupId>
				<artifactId>com.sap.core.connectivity.httpdestination</artifactId>
				<version>0.9.256</version>
			</dependency>
			<dependency>
				<groupId>com.sap.core.connectivity.httpdestination</groupId>
				<artifactId>com.sap.core.connectivity.httpdestination.runtime</artifactId>
				<version>0.9.256</version>
			</dependency>
			<dependency>
				<groupId>com.sap.core.connectivity.httpdestination</groupId>
				<artifactId>com.sap.core.connectivity.httpdestination.common</artifactId>
				<version>0.9.256</version>
			</dependency>
			<dependency>
				<groupId>com.sap.core.connectivity.httpdestination</groupId>
				<artifactId>com.sap.core.connectivity.destinations</artifactId>
				<version>0.9.256</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>4.4.9</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>4.5.4</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient-cache</artifactId>
				<version>4.5.10</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>org.apache.commons.logging</artifactId>
				<version>1.1.1</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.11</version>
			</dependency>			
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- Required for testing -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>${slf4j.library}</artifactId>
			<scope>runtime</scope>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>vulas</id>
			<activation>
				<property>
					<name>vulas</name>
				</property>
			</activation>
			<properties>
				<vulas.version>3.0.8</vulas.version>
				<vulas.shared.backend.serviceUrl>https://vulas.mo.sap.corp:8080/backend</vulas.shared.backend.serviceUrl>
				<vulas.core.space.token>C8E628CFEAFCFCC522E2960BE77FD16C</vulas.core.space.token>
			</properties>
			<build>
				<plugins>

                    <!-- Copies Vulas JARs to ${project.build.directory}/vulas/lib and incl, 
                        which is needed for the instrumentation of JUnit tests. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.10</version>
						<executions>
							<execution>
								<id>copy-vulas</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>com.sap.research.security.vulas</groupId>
											<artifactId>lang-java</artifactId>
											<version>${vulas.version}</version>
											<type>jar</type>
											<classifier>jar-with-dependencies</classifier>
											<outputDirectory>${project.build.directory}/vulas/lib</outputDirectory>
											<destFileName>vulas-core-latest-jar-with-dependencies.jar</destFileName>
										</artifactItem>
										<artifactItem>
											<groupId>com.sap.research.security.vulas</groupId>
											<artifactId>lang-java</artifactId>
											<version>${vulas.version}</version>
											<type>jar</type>
											<classifier>jar-with-dependencies</classifier>
											<outputDirectory>${project.build.directory}/vulas/include</outputDirectory>
											<destFileName>vulas-core-latest-jar-with-dependencies.jar</destFileName>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Registers the Vulas agent at JVM startup (and specifies a couple of configuration settings) -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.21.0</version>
						<configuration>
                            <!-- If set to 0, no separate JVM process will be spawned, i.e., one 
                                can use mvnDebug and JVM params can be added to the Maven (rather than putting 
                                them in the Surefire plugin configuration) (default: 1) -->
							<forkCount>1</forkCount>

                            <!-- Kill the forked test process after a certain number of seconds. 
                                If set to 0, wait forever for the process, never timing out. This allows 
                                Vulas to (hopefully) upload all info in its shutdown hook. More info: https://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html, 
                                https://maven.apache.org/surefire/maven-surefire-plugin/examples/shutdown.html -->
							<forkedProcessTimeoutInSeconds>0</forkedProcessTimeoutInSeconds>
							<!-- Available as of 2.20 (or so), default is 30 -->
							<forkedProcessExitTimeoutInSeconds>300</forkedProcessExitTimeoutInSeconds>

                            <!-- Note: System properties cannot be set at the Maven command line, 
                                they are not passed on to the JVM spawned by Surefire (if any, see parameter 
                                forkCount) -->
							<argLine>
								-javaagent:"${project.build.directory}/vulas/lib/vulas-core-latest-jar-with-dependencies.jar"
                                -Dvulas.shared.backend.serviceUrl=${vulas.shared.backend.serviceUrl}
                                -Dvulas.shared.tmpDir=${project.build.directory}/vulas/tmp
                                -Dvulas.core.backendConnection=READ_ONLY
                                -Dvulas.core.uploadDir=${project.build.directory}/vulas/upload
                                -Dvulas.core.monitor.periodicUpload.enabled=false
                                -Dvulas.core.appContext.group=${project.groupId}
                                -Dvulas.core.appContext.artifact=${project.artifactId}
                                -Dvulas.core.appContext.version=${release.version}
                                -Dvulas.core.instr.writeCode=false
                                -Dvulas.core.instr.maxStacktraces=10
                                -Dvulas.core.space.token=${vulas.core.space.token}
                                -Dvulas.core.instr.instrumentorsChoosen=com.sap.psr.vulas.monitor.trace.SingleTraceInstrumentor
                                -noverify

								<!-- Uncomment to write the heap to disk in case of memory issues -->
								<!-- -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${project.build.directory}/vulas/tmp -->
								<!-- Uncomment to debug the test execution or the Vulas plugin -->
								<!-- -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000 -->
							</argLine>
							<!-- Exclude problematic tests -->
							<excludes>
								<exclude>**/doesnotexist.java</exclude>
							</excludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.sap.research.security.vulas</groupId>
						<artifactId>plugin-maven</artifactId>
<!--						<version>${vulas.version}</version>-->
						<configuration>
							<layeredConfiguration>
								<vulas.shared.backend.serviceUrl>${vulas.shared.backend.serviceUrl}</vulas.shared.backend.serviceUrl>
								<vulas.core.space.token>${vulas.core.space.token}</vulas.core.space.token>
								<vulas.core.appContext.group>${project.groupId}</vulas.core.appContext.group>
								<vulas.core.appContext.artifact>${project.artifactId}</vulas.core.appContext.artifact>
								<vulas.core.appContext.version>${release.version}</vulas.core.appContext.version>
								<vulas.shared.tmpDir>${project.build.directory}/vulas/tmp</vulas.shared.tmpDir>
								<vulas.core.uploadDir>${project.build.directory}/vulas/upload</vulas.core.uploadDir>
								<vulas.core.app.sourceDir>${project.build.directory}/classes,${project.basedir}/src/main/java,${project.basedir}/src/main/python</vulas.core.app.sourceDir>

                                <!-- vulas:instr : Instruments JAR/WAR files found in source dir, 
                                    and writes to target dir. Files in include dir are put into /WEB-INF/lib 
                                    of output WARs. Files in lib dir are part of the class path when instrumenting. -->
								<vulas.core.instr.sourceDir>${project.build.directory}</vulas.core.instr.sourceDir>
								<vulas.core.instr.targetDir>${project.build.directory}/vulas/target</vulas.core.instr.targetDir>
								<vulas.core.instr.includeDir>${project.build.directory}/vulas/include</vulas.core.instr.includeDir>
								<vulas.core.instr.libDir>${project.build.directory}/vulas/lib</vulas.core.instr.libDir>
								<vulas.core.instr.writeCode>false</vulas.core.instr.writeCode>
								<vulas.core.instr.searchRecursive>false</vulas.core.instr.searchRecursive>
								<!-- vulas:a2c/t2c : Performs static call graph analysis -->
								<vulas.reach.wala.callgraph.reflection>NO_FLOW_TO_CASTS_NO_METHOD_INVOKE</vulas.reach.wala.callgraph.reflection>
								<vulas.reach.timeout>60</vulas.reach.timeout>
								<!-- vulas:report -->
								<vulas.report.exceptionExcludeBugs></vulas.report.exceptionExcludeBugs>
								<vulas.report.reportDir>${project.build.directory}/vulas/report</vulas.report.reportDir>
								<vulas.report.sap.scv>73555000100200007393</vulas.report.sap.scv>
							</layeredConfiguration>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<distributionManagement>
		<repository>
			<id>leandi.nexus.milestone.repo</id>
			<name>LeanDI Nexus Milestones Repository</name>
			<url>http://nexus.wdf.sap.corp:8081/nexus/content/repositories/deploy.milestones</url>
		</repository>
		<snapshotRepository>
			<id>leandi.nexus.snapshot.repo</id>
			<name>LeanDI Nexus Snapshots Repository</name>
			<url>http://nexus.wdf.sap.corp:8081/nexus/content/repositories/deploy.snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	<repositories>
		<repository>
			<id>selenium root</id>
			<name>LeanDI Nexus Snapshots Repository</name>
			<url>http://nexus.wdf.sap.corp:8081/nexus/content/repositories/deploy.snapshots</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>
